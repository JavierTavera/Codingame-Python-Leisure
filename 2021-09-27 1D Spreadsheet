# Not ready yet!

import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

n = int(input())
cells = []*n
cellsValues = []*n
cellsValuesInString = ""
fin = ""
futureCell = finalText = ""
refArg1 = {}
refArg2 = {}
dictNum = ""


def calcu(ope, ar1, ar2):
    ar1 = int(ar1)
    if ar2 != "_":
        ar2 = int(ar2)
    if ope == "VALUE":
        return ar1
    if ope == "ADD":
        return ar1 + ar2
    if ope == "SUB":
        return ar1 - ar2
    if ope == "MULT":
        return ar1*ar2

def look_for_last_value_1(refA1, arg1or2, valueBefore, chain = 0):
    #print(str(refA1) + " " + str(arg1or2) + " " + str(valueBefore) + " " + str(chain))
    if cells[refA1][3] != "":
        cells[valueBefore][arg1or2] = str(cells[refA1][3])
        try_to_calculate(valueBefore)
        chain -= 1
        if chain != 0:
            for a, b in refArg1.items():
                if b == valueBefore:
                    dictNum = a
                    #print(str(refA1) + " " + str(arg1or2) + " " + str(valueBefore) + " " + str(chain) + " "  +str(dictNum))
                    look_for_last_value_1(valueBefore, arg1or2, dictNum, chain)
               
    else:
        chain += 1
        #print(chain)
        #print(refArg1)
        #print(refArg1[refA1])
        look_for_last_value_1(int(refArg1[refA1]), arg1or2, refA1, chain)

def try_to_calculate(refA1):
    if cells[refA1][1][0] == "$":
        look_for_last_value_1(int(cells[refA1][1][1:]), 1, refA1, 1)
    if cells[refA1][2][0] == "$":
        look_for_last_value_1(int(cells[refA1][2][1:]), 2, refA1, 1)

    if str(cells[refA1][1]).isnumeric() and str(cells[refA1][2]).isnumeric():
        cells[refA1][3] = calcu(cells[refA1][0], cells[refA1][1], cells[refA1][2])
        #del refArg1[refA1]

for i in range(n):
    operation, arg_1, arg_2 = input().split()
    if arg_1[0] == "$":
        refArg1[i] = int(arg_1[1:])
        #print(str(i) + " " + str(int(arg_1[1:])))
        #print(refArg1)
    elif operation == "VALUE":
        futureCell = calcu( operation, arg_1, arg_2)
    if arg_2[0] == "$":
        refArg2[i] = int(arg_2[1:])

    cells.append([operation, arg_1, arg_2, futureCell])
    futureCell = ""

#k = list(refArg1.keys())
#k.sort()

for i in range(n):
    if cells[i][1][0] == "$":
        look_for_last_value_1(int(cells[i][1][1:]), 1, i, 1)

    if cells[i][2][0] == "$":
        look_for_last_value_1(int(cells[i][2][1:]), 2, i, 1)

    cells[i][3] = calcu(cells[i][0], cells[i][1], cells[i][2])
    fin = "\n" if i != n - 1 else ""
    cellsValuesInString += str(calcu(cells[i][0], cells[i][1], cells[i][2])) + fin
    #print(cellsValuesInString)

print(cellsValuesInString)
